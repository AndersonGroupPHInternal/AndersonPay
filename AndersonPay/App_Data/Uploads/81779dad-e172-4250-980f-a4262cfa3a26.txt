Controler

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using AndersonPay.Models;
using AndersonPay.Models.InvoiceContext;

namespace AndersonPay.Controllers
{
    public class AddEmployeesController : Controller
    {
        private InvoiceContext db = new InvoiceContext();

        // GET: AddEmployees
        public ActionResult Index()
        {
            return View(db.Employees.ToList());
        }

        // GET: AddEmployees/Details/5
        public ActionResult Details(string id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Employee employee = db.Employees.Find(id);
            if (employee == null)
            {
                return HttpNotFound();
            }
            return View(employee);
        }

        // GET: AddEmployees/Create
        public ActionResult Create()
        {
            return PartialView();
        }

        // POST: AddEmployees/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include = "FullName,StartDate,EndDate")] Employee employee)
        {
            if (ModelState.IsValid)
            {
                db.Employees.Add(employee);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            return RedirectToAction("Index");
        }

        // GET: AddEmployees/Edit/5
        public ActionResult Edit(string id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Employee employee = db.Employees.Find(id);
            if (employee == null)
            {
                return HttpNotFound();
            }
            return PartialView(employee);
        }

        // POST: AddEmployees/Edit/5
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include = "FullName,StartDate,EndDate")] Employee employee)
        {
            if (ModelState.IsValid)
            {
                db.Entry(employee).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            return RedirectToAction("Index");
        }

        // GET: AddEmployees/Delete/5
        public ActionResult Delete(string id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Employee employee = db.Employees.Find(id);
            if (employee == null)
            {
                return HttpNotFound();
            }
            return PartialView(employee);
        }

        // POST: AddEmployees/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(string id)
        {
            Employee employee = db.Employees.Find(id);
            db.Employees.Remove(employee);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
----------------------------------------------------------------
Create

@model AndersonPay.Models.Employee

<style>
    #grad1 {
        color: white;
        margin: 0px;
        background: linear-gradient(to right, #159cf6, #97dded);
    }
</style>

<script type="text/javascript" src="~/Content/assets/js/plugins/forms/selects/select2.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/forms/styling/switchery.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/forms/inputs/touchspin.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/notifications/jgrowl.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/ui/moment/moment.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/pickers/daterangepicker.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/pickers/anytime.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/pickers/pickadate/picker.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/pickers/pickadate/picker.date.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/pickers/pickadate/legacy.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/forms/selects/bootstrap_select.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/buttons/ladda.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/views/form_bootstrap_select.js"></script>
<script type="text/javascript" src="~/Content/assets/js/views/createinvoice.js"></script>
<script type="text/javascript" src="~/Content/assets/js/views/picker_date.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="padding:20px;">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="panel panel-heading" id="grad1" style="padding:5px;margin-bottom:10px;padding-left:20px;">

            <h3>Add New Job</h3>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Full Name" } })
                <i class="icon-magazine form-control-feedback"></i>
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="input-group-xlg">
            <div class="row">
                 Date 
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="icon-calendar5"></i></span>

                        @Html.TextBox("StartDate", DateTime.Now.ToShortDateString(), new { @class = "form-control pickadate text-center", @placeholder = "Start Date" })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="icon-calendar5"></i></span>

                        @Html.TextBox("EndDate", DateTime.Now.ToShortDateString(), new { @class = "form-control pickadate text-center", @placeholder = "End Date" })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <br />
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" align="right">
                <button type="submit" value="Index" class="btn btn-primary">Next</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>}
-------------------------------------------------------------------------------------
Delete

@model AndersonPay.Models.Employee

@{
    ViewBag.Title = "Delete";
}
<div class="form-horizontal" style="padding:20px;">
    <div class="panel panel-heading" id="grad1" style="padding:5px;margin-bottom:10px;padding-left:20px;">

        <h3>Are you sure you want to delete this?</h3>
    </div>
    <div>

        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.FullName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.FullName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.StartDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.StartDate)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.EndDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EndDate)
            </dd>
        </dl>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-actions no-color">
                <input type="submit" value="Delete" class="btn btn-primary" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        }
    </div>
</div>
---------------------------------------------------------------------------------------------
Details

@model AndersonPay.Models.Employee

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Employee</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

    </dl>
</div>
@*<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.FullName }) |
    @Html.ActionLink("Back to List", "Index")
</p>*@
--------------------------------------------------------------------
Edit

@model AndersonPay.Models.Employee

<style>
    #grad1 {
        color: white;
        margin: 0px;
        background: linear-gradient(to right, #159cf6, #97dded);
    }
</style>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="padding:20px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="panel panel-heading" id="grad1" style="padding:5px;margin-bottom:10px;padding-left:20px;">

            <h3>Edit Company Information</h3>
        </div>
        <div class="panel-heading" style="padding:0px;">

            <div class="panel-body">

                <div class="form-group">
                    @Html.HiddenFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
}
---------------------------------------------------------------------------------------------
Index

@model IEnumerable<AndersonPay.Models.Employee>
@using AndersonPay.Models.InvoiceContext;
@{
    InvoiceContext db = new InvoiceContext();
}
<script>
    $('body').on('hidden.bs.modal', '.modal', function () {
        $(this).removeData('bs.modal');
    });
</script>
<style>
    #grad1 {
        color: white;
        margin: 0px;
        background: linear-gradient(to right, #159cf6, #97dded);
    }
</style>

<div class="content-wrapper" style="padding:50px;">
    <p>
        <!-- Button trigger modal -->

        <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" href="@Url.Action("Create", "AddEmployee")">
            <i class="glyphicon glyphicon-plus-sign"></i> Add Employee
        </button>
    </p>

    @{var ptrEmployeeDetails = 0; }
    @foreach (var item in db.Employees.ToList())
    {

        <div class="panel panel-flat" id="grad1" style="padding:5px;margin-bottom:2px;padding-left:20px;">


            <div class="row" style="margin-top:4px;">


                <span class="col-xs-4 col-xs-offset-0" style="cursor:pointer;" data-toggle="collapse" data-target="#@ptrEmployeeDetails" aria-expanded="false" aria-controls="@ptrEmployeeDetails">
                    @Html.DisplayFor(modelItem => item.FullName)
                </span>
                <div class="col-xs-8 colxs-offset-8">
                    <ul class="list-inline list-inline-condensed heading-text pull-right">
                        x
                        <li class="dropdown">
                            <a href="#" class="text-default dropdown-toggle" data-toggle="dropdown"><i class="icon-menu7"></i> <span class="caret"></span></a>
                            <ul class="dropdown-menu dropdown-menu-right">
                                <li><a data-toggle="modal" data-target="#myModal" href="@Url.Action("Edit", "AddEmployee", new { id = item.FullName })"><i class="glyphicon glyphicon-pencil"></i> Edit</a></li>
                                <li class="divider"></li>
                                <li><a data-toggle="modal" data-target="#myModal" href="@Url.Action("Delete", "AddEmployee", new { id = item.FullName })"><i class="glyphicon glyphicon-trash"></i> Delete</a></li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="collapse" id="@ptrEmployeeDetails">
            @{ ptrEmployeeDetails++;}
            <div class="panel panel-flat" style="padding:10px;">
                <div class="row">
                    <div class="col-xs-4">
                        &nbsp;
                        &nbsp;
                        &nbsp;
                        <b>
                            @Html.DisplayNameFor(model => model.FullName)
                            <span>: </span>
                        </b>
                    </div>
                    <span class="col-xs-4 col-xs-offset-0"> @Html.DisplayFor(modelItem => item.FullName)</span>
                </div>
                <br />
                <div class="row">
                    <div class="col-xs-4">
                        &nbsp;
                        &nbsp;
                        &nbsp;
                        <b>
                            @Html.DisplayNameFor(model => model.StartDate)
                            <span>: </span>
                        </b>
                    </div>
                    <span class="col-xs-4 col-xs-offset-0"> @Html.DisplayFor(modelItem => item.StartDate)</span>

                </div>
                <br />
                <div class="row">
                    <div class="col-xs-4">
                        &nbsp;
                        &nbsp;
                        &nbsp;
                        <b>
                            @Html.DisplayNameFor(model => model.EndDate)
                            <span>: </span>
                        </b>
                    </div>
                    <span class="col-xs-4 col-xs-offset-0"> @Html.DisplayFor(modelItem => item.EndDate)</span>
                </div>
                <br />
                <br />
            </div>
        </div>
                }
</div>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
        </div>
    </div>

</div>